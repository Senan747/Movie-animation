* {
  padding: 0;
  margin: 0;
  border: none;
  text-decoration: none;
  box-sizing: border-box;
  font-family: "Montserrat", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
}

.container {
  height: 100vh;
  background: blue;
  display: flex;
  overflow: hidden;
}
.container .box {
  width: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  position: relative;
  z-index: 1;
  transition: 1s width;
  transition-timing-function: cubic-bezier(0.6, 0.06, 0.34, 1);
}
.container .box * {
  transition: 1s all;
}
.container .box .image {
  width: 15vw;
  height: 70%;
  background: red;
  opacity: 0.2;
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: -1;
  transform: translate(-50%, -50%);
  transition: 1s height;
  transition-timing-function: cubic-bezier(0.6, 0.06, 0.34, 1);
}
.container .box h1 {
  font-size: 70px;
  font-weight: 900;
  color: white;
  font-style: oblique;
}
.container .box input {
  display: none;
}
.container .box .arrow {
  color: white;
  font-size: 35px;
  font-weight: 500;
  cursor: pointer;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}
.container .box .button {
  height: 50px;
  padding: 0 40px;
  border-radius: 25px;
  background-color: rgba(255, 255, 255, 0.25);
  font-size: 18px;
  font-weight: 400;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 35px;
  color: white;
}
.container .box.box1 {
  background: #0092d2;
}
.container .box.box1 .arrow {
  right: 20px;
}
.container .box.box2 {
  background: #ffab0f;
}
.container .box.box2 .arrow {
  left: 20px;
}
.container:not(:has(:checked)):has(.box:hover) .box:not(:has(:hover)) {
  width: 35%;
}
.container:not(:has(:checked)):has(.box:hover) .box:hover {
  width: 65%;
}
.container:has(:checked) .box:has(:checked) {
  width: 90%;
}
.container:has(:checked) .box:has(:checked) .arrow {
  opacity: 0;
  visibility: hidden;
}
.container:has(:checked) .box:not(:has(:checked)) {
  width: 10%;
}
.container:has(:checked) .box:not(:has(:checked)) *:not(.arrow) {
  opacity: 0;
}
.container:has(:checked) .box:not(:has(:checked)) .arrow {
  transform: rotateY(180deg) translateY(-50%);
  transform-origin: center center;
}

/*# sourceMappingURL=style.css.map */
